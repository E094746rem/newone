<style>
/* so let's talk about CSS  --> */
/* so starting from the body by making box-sizing:border-box we set the body to full web screen and by puting margin and padding 0 
this will help us to grasp the hole wed screen so we can style it like we want
*/
body {
 box-sizing: border-box;
 margin: 0; 
 padding: 0;
 min-height: 200vh;
 position: relative;
 background: linear-gradient(to right, rgb(75, 121, 161), rgb(40, 62, 81));
}
/*  so now i am stateing the left side of the header and by using the CSS attribute and if i must have to define all of them 
this is going to take a lot of space so long story short this will make my left side of header which is HOME 
give inner padding and outside margin and for the font color for the border i use border,bor-style,bor-radius and when we a havor over it 
to make it look like it is liked i use curse which is pointer 
*/
.left-s{
 position: relative;
 font-size: 25px;
 margin-left: 10px;
 padding: 2px 2px 2px 2px;
 color: #515c61;
 background-color: rgb(216, 227, 236);
 border: 4px solid;
 border-style: groove;
 cursor: pointer;
 border-radius: 8px;
}
/*  so i'm back agian in this section what i'm doing is giving my left side HOME a little transition and transform which
kind look like fun and attractive
*/
.left-s:hover{
 border-radius: 15px;
 color: rgb(216, 227, 236);
 background-color: #515c61;
 transition: 0.35s ease-in-out;
 transform: translate(-2px, -2px );
}
/*  so this one i'm trying to make my web a little more realistic so about this one is this will make my hole list orderd and 
let's see some CSS property position:absolute this will put the list relative to it's ancestor and it's relative attribute is
right,left,bottom,top o i almost forget about the list to remove the defualt list style i used the list-style-type so that it remove
the dot's and what's so ever .
*/
.left-ul ul{
 font-size: 20px;
 position: absolute;
 top: 70px;
 left: 80px;
 list-style-type: none;
 margin: 0;
 padding: 0;
 display: flex;
 flex-wrap: wrap;
 flex-direction: row;
}
/*  still in the list but in the section what am doing is removing the defualt because some times it looks like a little boring*/
li a{
 margin: 20px 0;
padding: 10px 20px;
 text-decoration: none;
}
/* o this one the one that i love about this is you can give a suprise for the use so let's see in the M&P i have cover in the privouse one 
but the transition and transformation make the havoring best
*/
li .hov:hover{
 margin: 0;
 padding: 5px;
 background-color: #9bc2d4;
 border-radius: 8px;
 border-bottom: 3px solid  rgb(40, 62, 81);
 transition: 0.35s ease-out;
 transform: translate(-2px -2px);
}
/* button is one of the HTML element that give for the web a button function but in this project i did't use it for that function
it's just empty but i give it a font-size,margin, padding,border but going throuht all the button function is boring so let me 
review everything in here i set the background in linear-gradient so it looks more attractive and attention seeker and in Havor 
pseoude class i change the color,background and curser 
*/
button{
 font-size: 19px;
 margin-right: 10px;
 padding: 2px 2px 2px 2px;
 border: royalblue solid;
 border-radius: 10px;
}

.join:hover{
 cursor: pointer;
 color: white;
 background: linear-gradient(to right, rgb(102, 96, 148), rgb(115, 3, 192), rgb(236, 56, 188), rgb(253, 239, 249));
}

.sign:hover {
cursor: pointer;
color: black;
background: rgb(211, 39, 39);
}

.sign{
 color: white;
 background: linear-gradient(to right, rgb(102, 96, 148), rgb(115, 3, 192), rgb(236, 56, 188), rgb(253, 239, 249));
}

.join{
 color: aliceblue;
 background-color: rgb(221, 28, 28);
}
/* miss me, so let see the header CSS like other one i state the font(family),background,margin and a new thing is display;flex
justify-content,align-items let me define them this is done in the (div) section div is just a box which is empty or empty container
so the display one give the designer the power to put the div in flexable of grid or anything and by stating the justify-content i can 
contront the elements in the div in the horizontal manner and by stating the  align-items,content what so ever it will ajust the element 
in vertical way
*/
.header{
 height: 100px;
 font-size: 35px;
 font-weight: 700;
 font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
 display: flex;
 justify-content: space-between;
 align-items: center;
 margin-bottom: 10px;
 background: linear-gradient(to right, rgb(112, 225, 245), rgb(255, 209, 148));
}
/* this part is the netflix one so it's forwared that it doesn;t need any defination */
header{
 color: rgb(224, 39, 39);
 margin: 300px;
 padding: 0;
}
/* so this part is the main (core) part of the project and i use the predifine CSS element i put the display: flex so it can move freely 
in the place it was given flex-direction: row; this is a family of flex which it help us in puting things in order of row or colomun(revers)
row-gap & colomun-gap is  for me to put a dicent distance bitween the two pics
*/
.mid{
 display: flex;
 flex-direction: row;
 margin: 0 10px 0 19px;
 padding: 0;
 row-gap: 10px;
 column-gap: 5px;
 flex-wrap: wrap;
 
}
/* this one is complex but let's make it easy to see throught so  .card-container .card a  this is nested selecting and the is universal,
id,element,class and by using this i design the card fornt and link side z-index is when you need it to be up front when eveything is 
behined it
*/
.card-container .card a {
padding: 30px;
width: 250px;
height: 270px;
border: 4px double black;
border-radius: 10% 10% ;
background: linear-gradient(to right, rgb(240, 194, 123), rgb(221, 214, 221));
text-decoration: none;
color: black;
display: block;
transition: 0.25s ease;
z-index: 2;
}
/*  this one will make move the card toward us and make it like it is animated the transform: translate this part gives the card 
a moving motion by -30px to x axiss, -30px to y axiss
*/
.card-container .card a:hover {
transform: translate(-30px, -30px);
border-color: #5bc0eb;
}

/* this is the trick to hide what is upfront and make it look like it doesn't  exist we can make it by stating the display: to none */
.card-container .card a:hover .card--display {
display: none;
}

/*  and i'm back in this section of the trick is to make it visible in the given W&H boom now when they havor over it the image
will pop up
*/
.card-container .card a:hover .card--hover {
display: block;
}

/* so still here with the trick and in this one i'm going to hide agian the uncessary thing like the front page and make it blank 
so when the image pop's up it will be clean sleet
*/
.card-container .card a .card--hover {
display: none;}

/* so in this selector it is diving to the i element by selecting one from the other and puting the CSS property to
that component make it steel atractive
*/
.card-container .card a .card--display i {
font-size: 30px;
margin-top: 100px;
padding-left: 30px;
}
/* let me cover all the card property i set FLEX J-C:S-EV A-I;Fl-E  this will set the component align to center*/
.flex{
display: flex;
justify-content: center;
align-items:center;
}

.card--display{
border: 3px inset rgb(59, 56, 56);
}

.card--display, .flex{
border: 3px inset rgb(58, 54, 54);
}
/* thank's god now we are in the footer part or the bottom in this one  just to make it simple i divided it in to the parts and this 
one #fol is called id selector and in diging deeper or in being focused this one is better than class 
*/
#fol{
width: 280px;
height: 290px;
border-radius: 10% 10%;
}
/* but still this is the real footer that discribe it's property display: flex will set the footer to be flexable ,
justify-content: space-between this one sets the element(goo,span,copyright) divide the equaly in the space provided
by the footer
*/
.foo{
 display: flex;
 justify-content: space-between;
 align-items: center;
 width: 100%;
 height: 88px;
 background: linear-gradient(to right, rgb(211, 149, 155), rgb(191, 230, 186));
 position: absolute;
 bottom: 0;
}
/* puting id selector then stating the font,text-decoration so that it woudn't look like other defualt link */
#goo{
 font-size: 22px;
 text-decoration: none;
 font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
 font-weight: 600;
}
/* this specifies the paragraph only in the "having fun" place */
.foo p{
 font-size: 25px;
 color: rgb(90, 87, 83);
}
/* in this case what i'm doing is stayling the .discription to make it more atractive sence the purpose of CSS is thst  */
.discription{
font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
display: line-block;
text-align: center;
padding-top: 10px;
padding-bottom: 10px;
}
/* sence i didn't want to use h1 the i have to style the font and P&M to */
.discription h2{
font-size: 40px;
margin: 0;
padding: 0;
}
/* still in CSS and stayling a paragraph but in this case i have to put height so it wouldn't push back the button key down  */
.discr {
font-family:'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;
font-weight: 600;
font-size: 20px;
margin: 0;
height: 120px;
}
/* this is the button part that i put and stayling it again and down there is just puting the transition and translate together */
.desk{
margin: 0;
background-color: hsl(17, 66%, 48%);
font-size: 19px;
}
.desk:hover{
margin: 0;
background: linear-gradient(to right, rgb(102, 96, 148), rgb(132, 98, 155), rgb(216, 118, 190), rgb(226, 215, 223));
transform: translate(-8px, -8px);
transition: 2s ease-in-out;
}
.mov{
margin: 0;
padding: 0;
padding-left: 40px;
font-family: sans-serif;
color: white;
}

.mov p{
font-size: 20px;
font-family: sans-serif;
padding:0;
margin: 0;
}
.mov pre{
margin: 0;
height: 80px;
}
/* this is the unorder list CSS section so in this one just seting up the display: flex and align it but the real decoration is down there */
.dis-hov {
   display: flex;
   width: 100px;
   align-items: center;
   margin: 0;
   padding: 0;
   min-width: 90;
 }
 /* the beauti of the list comes from this CSS section so let's see it margin:0 because i don't want distance to be far
 seting the font(family), display: inline-flex so it will take bothe the inline and flex CSS behavour so it will be good
 to set it in this type of situation 
 */
 .dis-h li {
   margin: 0;
   font-family: sans-serif;
   font-size: 15px;
   display: inline-flex;
   align-items: center;
   border: 2px solid;
   justify-content: space-evenly;
   flex-direction: row;
   flex-wrap: wrap;
   min-width: 90px;
   background-color: #545b5e;
   color: white;
 }
/* in this section sameold sameold there is nothing new that i should explain */
 .dis-h li:hover {
   transform: translate(-3px, -3px);
   transition: 0.2s ease-in-out;
   border-radius: 5px;
   background-color: rgb(49, 49, 199);
   color: white;
 }

 .left-ul .dis-h {
   display: none;
 }

.left-ul .dis-hov:hover .dis-h {
   cursor: pointer;
   display: inline-block;
 }

</style>